#!/usr/bin/env node

'use strict';

const execSync = require('child_process').execSync;
const path = require('path');
const program = require('commander');

const create = (name) => {
  var knex = path.join('..', 'node_modules', '.bin', 'knex');
  var knexfile = path.join('..', 'db', 'knexfile.js');
  var result = execSync(`${knex} migrate:make ${name} --knexfile ${knexfile}`, { encoding: 'utf8' });
  console.log(result);
};

const up = () => {
  var knex = path.join('.', 'node_modules', '.bin', 'knex');
  var knexfile = path.join('.', 'db', 'knexfile.js');
  var result = execSync(`NODE_ENV=test ${knex} migrate:latest --knexfile ${knexfile}`, { encoding: 'utf8' });
  console.log(result);
};

const down = () => {
  var knex = path.join('.', 'node_modules', '.bin', 'knex');
  var knexfile = path.join('.', 'db', 'knexfile.js');
  var result = execSync(`${knex} migrate:rollback --knexfile ${knexfile}`, { encoding: 'utf8' });
  console.log(result);
};

program
  .command('[action] [name]')
  .usage('<new|up|down|rollback>')
  .description('Create, run, or rollback a migration')
  .action((action, name) => {
    switch (action) {
      case 'new', 'g':
        create(name);
        break;

      case 'down', 'rollback':
        down();
        break;

      default:
        up();
    }
  });
